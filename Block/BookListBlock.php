<?php

/**
 * Book Module
 * 
 * @version      BookListBlock,v 1.1 2015/12/23
 * @author       Timothy Paustian
 * @link         http://www.bact.wisc.edu/ 
 * @copyright    Copyright (C) 2015 by Timothy Paustian
 * @license      http://www.gnu.org/copyleft/gpl.html GNU General Public License
 */

namespace Paustian\BookModule\Block;

use Zikula_View;
use SecurityUtil;
use BlockUtil;
//HOLD OFF ON THIS UNTIL 1.4.2 IS OUT
class BookListBlock extends \Zikula_Controller_AbstractBlock {
    
    /**
     * Post initialise.
     *
     * @return void
     */
    protected function postInitialize()
    {
        // In this block we do not want caching.
        $this->view->setCaching(Zikula_View::CACHE_DISABLED);
    }
    
    /**
     * initialise block
     * 
     * @author       Timothy Paustian
     * @version      $0.1 $
     */
    public function init() {
        // Security
        SecurityUtil::registerPermissionSchema('Book:BookListBlock', 'Block title::Block ID');
    }

    /**
     * get information on block
     * 
     * @author       Timothy Paustian
     * @version      $0.1 $
     * @return       array       The block information
     */
    public function info() {
        return array('module'          => 'Book',
                     'text_type'       => $this->__('Book List'),
                     'text_type_long'  => $this->__('Block of Books Available'),
                     'allow_multiple'  => false,
                     'form_content'    => false,
                     'form_refresh'    => false,
                     'show_preview'    => true);
    }

    /**
     * display block
     * 
     * @author       Timothy Paustian
     * @version      1.1
     * @param        array       $blockinfo     a blockinfo structure
     * @return       output      the rendered bock
     */
    public function display($blockinfo) {
        // Security check - important to do this as early as possible to avoid
        // potential security holes or just too much wasted processing.  
        // Note that we have Book:Firstblock: as the component.
        if (!$this->hasPermission('Bookblock::', "$blockinfo[title]::$blockinfo[bid]", ACCESS_READ)) {
            return;
        }

        // Get variables from content block
        $vars = BlockUtil::varsFromContent($blockinfo['bid']);


        // Check if the Book module is available. 
        if (!ModUtil::available('Book')) {
            return false;
        }


        // Call the modules API to get the items
        $items = ModUtil::apiFunc('Book', 'user', 'getall');

        // Check for no items returned
        if (empty($items)) {
            return;
        }

        // Call the modules API to get the numitems
        $countitems = ModUtil::apiFunc('Book', 'user', 'countitems');

        // Create output object
        // Note that for a block the corresponding module must be passed.
        $books = array();
        // Display each item, permissions permitting
        
        foreach ($items as $item) {
            $item['toc'] = ModUtil::apiFunc('Book', 'user', 'toc', array('bid' => $item['bid']));
            $books[]=$item;
        }
        
        $this->view->assign('books', $books);

        // Populate block info and pass to theme
        $text = $this->view->fetch('book_block_first.tpl');
        $blockinfo['content'] = $text;
        return BlockUtil::themeBlock($blockinfo);
    }

    /**
     * modify block settings
     * 
     * @author       Timothy Paustian
     * @version      $ 0.1 $
     * @param        array       $blockinfo     a blockinfo structure
     * @return       output      the bock form
     */
    function Book_firstblock_modify($blockinfo) {
        // Get current content
        $vars = BlockUtil::varsFromContent($blockinfo['content']);


        // Create output object
        $render = Zikula_View::getInstance('Book');

        // As Admin output changes often, we do not want caching.
        //$render->caching = false;
        // assign the approriate values
        //$render->assign('numitems', $vars['numitems']);
        // Return the output that has been generated by this function
        return $render->fetch('book_block_first.tpl');
    }

    /**
     * update block settings
     * 
     * @author       Timothy Paustian
     * @version      $: 0.1 $
     * @param        array       $blockinfo     a blockinfo structure
     * @return       $blockinfo  the modified blockinfo structure
     */
    function Book_firstblock_update($blockinfo) {
        // Get current content
        $vars = BlockUtil::varsFromContent($blockinfo['content']);

        // alter the corresponding variable
        $vars['numitems'] = FormUtil::getPassedValue('numitems');

        // write back the new contents
        $blockinfo['content'] = BlockUtil::varsToContent($vars);

        // clear the block cache
        $render = Zikula_View::getInstance('Book');
        $render->clear_cache('book_block_first.tpl');

        return $blockinfo;
    }

}

